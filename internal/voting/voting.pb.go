// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/voting/voting.proto

package voting

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Part. A
type Voter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Voter) Reset()         { *m = Voter{} }
func (m *Voter) String() string { return proto.CompactTextString(m) }
func (*Voter) ProtoMessage()    {}
func (*Voter) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{0}
}

func (m *Voter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Voter.Unmarshal(m, b)
}
func (m *Voter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Voter.Marshal(b, m, deterministic)
}
func (m *Voter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Voter.Merge(m, src)
}
func (m *Voter) XXX_Size() int {
	return xxx_messageInfo_Voter.Size(m)
}
func (m *Voter) XXX_DiscardUnknown() {
	xxx_messageInfo_Voter.DiscardUnknown(m)
}

var xxx_messageInfo_Voter proto.InternalMessageInfo

func (m *Voter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Voter) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Voter) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type VoterName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoterName) Reset()         { *m = VoterName{} }
func (m *VoterName) String() string { return proto.CompactTextString(m) }
func (*VoterName) ProtoMessage()    {}
func (*VoterName) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{1}
}

func (m *VoterName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoterName.Unmarshal(m, b)
}
func (m *VoterName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoterName.Marshal(b, m, deterministic)
}
func (m *VoterName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoterName.Merge(m, src)
}
func (m *VoterName) XXX_Size() int {
	return xxx_messageInfo_VoterName.Size(m)
}
func (m *VoterName) XXX_DiscardUnknown() {
	xxx_messageInfo_VoterName.DiscardUnknown(m)
}

var xxx_messageInfo_VoterName proto.InternalMessageInfo

func (m *VoterName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Status struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{2}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type Challenge struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}
func (*Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{3}
}

func (m *Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Challenge.Unmarshal(m, b)
}
func (m *Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Challenge.Marshal(b, m, deterministic)
}
func (m *Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Challenge.Merge(m, src)
}
func (m *Challenge) XXX_Size() int {
	return xxx_messageInfo_Challenge.Size(m)
}
func (m *Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Challenge proto.InternalMessageInfo

func (m *Challenge) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Response struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type AuthRequest struct {
	Name                 *VoterName `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Response             *Response  `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{5}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetName() *VoterName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AuthRequest) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

type AuthToken struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthToken) Reset()         { *m = AuthToken{} }
func (m *AuthToken) String() string { return proto.CompactTextString(m) }
func (*AuthToken) ProtoMessage()    {}
func (*AuthToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{6}
}

func (m *AuthToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthToken.Unmarshal(m, b)
}
func (m *AuthToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthToken.Marshal(b, m, deterministic)
}
func (m *AuthToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthToken.Merge(m, src)
}
func (m *AuthToken) XXX_Size() int {
	return xxx_messageInfo_AuthToken.Size(m)
}
func (m *AuthToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthToken.DiscardUnknown(m)
}

var xxx_messageInfo_AuthToken proto.InternalMessageInfo

func (m *AuthToken) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// Repeated means this field can repeated any number of times including 0
type Election struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Groups               []string             `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Choices              []string             `protobuf:"bytes,3,rep,name=choices,proto3" json:"choices,omitempty"`
	EndDate              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Token                *AuthToken           `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Election) Reset()         { *m = Election{} }
func (m *Election) String() string { return proto.CompactTextString(m) }
func (*Election) ProtoMessage()    {}
func (*Election) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{7}
}

func (m *Election) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Election.Unmarshal(m, b)
}
func (m *Election) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Election.Marshal(b, m, deterministic)
}
func (m *Election) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Election.Merge(m, src)
}
func (m *Election) XXX_Size() int {
	return xxx_messageInfo_Election.Size(m)
}
func (m *Election) XXX_DiscardUnknown() {
	xxx_messageInfo_Election.DiscardUnknown(m)
}

var xxx_messageInfo_Election proto.InternalMessageInfo

func (m *Election) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Election) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Election) GetChoices() []string {
	if m != nil {
		return m.Choices
	}
	return nil
}

func (m *Election) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *Election) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type Vote struct {
	ElectionName         string     `protobuf:"bytes,1,opt,name=election_name,json=electionName,proto3" json:"election_name,omitempty"`
	ChoiceName           string     `protobuf:"bytes,2,opt,name=choice_name,json=choiceName,proto3" json:"choice_name,omitempty"`
	Token                *AuthToken `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{8}
}

func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (m *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(m, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetElectionName() string {
	if m != nil {
		return m.ElectionName
	}
	return ""
}

func (m *Vote) GetChoiceName() string {
	if m != nil {
		return m.ChoiceName
	}
	return ""
}

func (m *Vote) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type ElectionName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElectionName) Reset()         { *m = ElectionName{} }
func (m *ElectionName) String() string { return proto.CompactTextString(m) }
func (*ElectionName) ProtoMessage()    {}
func (*ElectionName) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{9}
}

func (m *ElectionName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectionName.Unmarshal(m, b)
}
func (m *ElectionName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectionName.Marshal(b, m, deterministic)
}
func (m *ElectionName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectionName.Merge(m, src)
}
func (m *ElectionName) XXX_Size() int {
	return xxx_messageInfo_ElectionName.Size(m)
}
func (m *ElectionName) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectionName.DiscardUnknown(m)
}

var xxx_messageInfo_ElectionName proto.InternalMessageInfo

func (m *ElectionName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type VoteCount struct {
	ChoiceName           string   `protobuf:"bytes,1,opt,name=choice_name,json=choiceName,proto3" json:"choice_name,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteCount) Reset()         { *m = VoteCount{} }
func (m *VoteCount) String() string { return proto.CompactTextString(m) }
func (*VoteCount) ProtoMessage()    {}
func (*VoteCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{10}
}

func (m *VoteCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteCount.Unmarshal(m, b)
}
func (m *VoteCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteCount.Marshal(b, m, deterministic)
}
func (m *VoteCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteCount.Merge(m, src)
}
func (m *VoteCount) XXX_Size() int {
	return xxx_messageInfo_VoteCount.Size(m)
}
func (m *VoteCount) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteCount.DiscardUnknown(m)
}

var xxx_messageInfo_VoteCount proto.InternalMessageInfo

func (m *VoteCount) GetChoiceName() string {
	if m != nil {
		return m.ChoiceName
	}
	return ""
}

func (m *VoteCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ElectionResult struct {
	Requiredus           int32        `protobuf:"varint,1,opt,name=requiredus,proto3" json:"requiredus,omitempty"`
	Counts               []*VoteCount `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ElectionResult) Reset()         { *m = ElectionResult{} }
func (m *ElectionResult) String() string { return proto.CompactTextString(m) }
func (*ElectionResult) ProtoMessage()    {}
func (*ElectionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_6422ae2d17d5f34a, []int{11}
}

func (m *ElectionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectionResult.Unmarshal(m, b)
}
func (m *ElectionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectionResult.Marshal(b, m, deterministic)
}
func (m *ElectionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectionResult.Merge(m, src)
}
func (m *ElectionResult) XXX_Size() int {
	return xxx_messageInfo_ElectionResult.Size(m)
}
func (m *ElectionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectionResult.DiscardUnknown(m)
}

var xxx_messageInfo_ElectionResult proto.InternalMessageInfo

func (m *ElectionResult) GetRequiredus() int32 {
	if m != nil {
		return m.Requiredus
	}
	return 0
}

func (m *ElectionResult) GetCounts() []*VoteCount {
	if m != nil {
		return m.Counts
	}
	return nil
}

func init() {
	proto.RegisterType((*Voter)(nil), "voting.Voter")
	proto.RegisterType((*VoterName)(nil), "voting.VoterName")
	proto.RegisterType((*Status)(nil), "voting.Status")
	proto.RegisterType((*Challenge)(nil), "voting.Challenge")
	proto.RegisterType((*Response)(nil), "voting.Response")
	proto.RegisterType((*AuthRequest)(nil), "voting.AuthRequest")
	proto.RegisterType((*AuthToken)(nil), "voting.AuthToken")
	proto.RegisterType((*Election)(nil), "voting.Election")
	proto.RegisterType((*Vote)(nil), "voting.Vote")
	proto.RegisterType((*ElectionName)(nil), "voting.ElectionName")
	proto.RegisterType((*VoteCount)(nil), "voting.VoteCount")
	proto.RegisterType((*ElectionResult)(nil), "voting.ElectionResult")
}

func init() { proto.RegisterFile("internal/voting/voting.proto", fileDescriptor_6422ae2d17d5f34a) }

var fileDescriptor_6422ae2d17d5f34a = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xdf, 0x8f, 0xd2, 0x40,
	0x10, 0x0e, 0x3f, 0x0a, 0x74, 0x40, 0xa2, 0x2b, 0xb9, 0x34, 0xe4, 0x14, 0xac, 0x31, 0x62, 0x62,
	0x4a, 0x82, 0xf1, 0xc1, 0xf8, 0xe4, 0xe1, 0xc5, 0x07, 0x13, 0x73, 0x59, 0x2f, 0xf7, 0xa0, 0x0f,
	0xa4, 0x94, 0x11, 0x9a, 0x2b, 0xbb, 0x5c, 0xbb, 0x7b, 0xc9, 0x3d, 0xfb, 0x0f, 0xf9, 0x27, 0x9a,
	0xce, 0x6e, 0x6b, 0x05, 0x2e, 0xf7, 0xc4, 0xce, 0x37, 0x1f, 0x33, 0xdf, 0xcc, 0x7c, 0x85, 0xd3,
	0x58, 0x28, 0x4c, 0x45, 0x98, 0x4c, 0x6f, 0xa5, 0x8a, 0xc5, 0xda, 0xfe, 0x04, 0xbb, 0x54, 0x2a,
	0xc9, 0x5a, 0x26, 0x1a, 0x8e, 0xd6, 0x52, 0xae, 0x13, 0x9c, 0x12, 0xba, 0xd4, 0xbf, 0xa6, 0x2a,
	0xde, 0x62, 0xa6, 0xc2, 0xed, 0xce, 0x10, 0xfd, 0x0b, 0x70, 0xae, 0xa4, 0xc2, 0x94, 0x31, 0x68,
	0x8a, 0x70, 0x8b, 0x5e, 0x6d, 0x5c, 0x9b, 0xb8, 0x9c, 0xde, 0x6c, 0x00, 0xce, 0x3a, 0x95, 0x7a,
	0xe7, 0xd5, 0x09, 0x34, 0x01, 0x7b, 0x06, 0xb0, 0xd3, 0xcb, 0x24, 0x8e, 0x16, 0xd7, 0x78, 0xe7,
	0x35, 0xc6, 0xb5, 0x49, 0x8f, 0xbb, 0x06, 0xf9, 0x8a, 0x77, 0xfe, 0x08, 0x5c, 0xaa, 0xf8, 0x2d,
	0xaf, 0x70, 0xa4, 0xaa, 0x7f, 0x0a, 0xad, 0xef, 0x2a, 0x54, 0x3a, 0xcb, 0xb3, 0x91, 0x5c, 0x99,
	0xac, 0xc3, 0xe9, 0xed, 0xbf, 0x00, 0x77, 0xbe, 0x09, 0x93, 0x04, 0xc5, 0x9a, 0x04, 0xdc, 0x86,
	0x89, 0x36, 0x8c, 0x1e, 0x37, 0x81, 0x3f, 0x86, 0x0e, 0xc7, 0x6c, 0x27, 0x45, 0x76, 0x1f, 0x63,
	0x09, 0xdd, 0x4f, 0x5a, 0x6d, 0x38, 0xde, 0x68, 0xcc, 0x14, 0x7b, 0x55, 0x51, 0xd1, 0x9d, 0x3d,
	0x09, 0xec, 0xaa, 0x4a, 0x99, 0x76, 0xdc, 0xb7, 0xd0, 0x49, 0x6d, 0x5d, 0x9a, 0xb8, 0x3b, 0x7b,
	0x5c, 0x50, 0x8b, 0x7e, 0xbc, 0x64, 0xe4, 0x42, 0xf3, 0x1e, 0x97, 0xf2, 0x1a, 0xc5, 0x3d, 0x32,
	0xfe, 0xd4, 0xa0, 0x73, 0x9e, 0x60, 0xa4, 0x62, 0x29, 0x8e, 0x2e, 0xf8, 0x04, 0x5a, 0xb4, 0xd3,
	0xcc, 0xab, 0x8f, 0x1b, 0x13, 0x97, 0xdb, 0x88, 0x79, 0xd0, 0x8e, 0x36, 0x32, 0x8e, 0x30, 0xf3,
	0x1a, 0x94, 0x28, 0x42, 0xf6, 0x1e, 0x3a, 0x28, 0x56, 0x8b, 0x55, 0xa8, 0xd0, 0x6b, 0x92, 0xc6,
	0x61, 0x60, 0x6e, 0x1c, 0x14, 0x37, 0x0e, 0x2e, 0x8b, 0x1b, 0xf3, 0x36, 0x8a, 0xd5, 0xe7, 0x50,
	0x21, 0x7b, 0x0d, 0x8e, 0xca, 0x85, 0x7a, 0xce, 0xff, 0x2b, 0x28, 0x27, 0xe0, 0x26, 0xef, 0x6b,
	0x68, 0xe6, 0x6b, 0x61, 0x2f, 0xe1, 0x11, 0x5a, 0xe5, 0x8b, 0x8a, 0xec, 0x5e, 0x01, 0xd2, 0x75,
	0x47, 0xd0, 0x35, 0xba, 0x0c, 0xc5, 0xb8, 0x04, 0x0c, 0x44, 0x84, 0xb2, 0x6d, 0xe3, 0x81, 0xb6,
	0x3e, 0xf4, 0xce, 0xab, 0x95, 0x8f, 0xf9, 0xe6, 0xcc, 0x18, 0x6b, 0x2e, 0xb5, 0x50, 0xfb, 0xad,
	0x6b, 0x07, 0xad, 0x07, 0xe0, 0x44, 0x39, 0x93, 0x54, 0x39, 0xdc, 0x04, 0xfe, 0x4f, 0xe8, 0x17,
	0x7d, 0x38, 0x66, 0x3a, 0x51, 0xec, 0x39, 0x40, 0x8a, 0x37, 0x3a, 0x4e, 0x71, 0xa5, 0x33, 0xeb,
	0xc4, 0x0a, 0xc2, 0xde, 0x40, 0x8b, 0xfe, 0x6a, 0x4e, 0xb4, 0xe7, 0x1e, 0xd2, 0xc2, 0x2d, 0x61,
	0xf6, 0xbb, 0x0e, 0x6d, 0xbc, 0xa2, 0x2c, 0x9b, 0x42, 0xfb, 0x22, 0xc5, 0x7c, 0x4e, 0x76, 0xe8,
	0xb7, 0x61, 0x09, 0xfd, 0xb3, 0x7a, 0x00, 0x4d, 0x62, 0x3f, 0xad, 0xee, 0xc8, 0x1a, 0x78, 0x78,
	0xb8, 0x38, 0x36, 0x83, 0xfe, 0x3c, 0xc5, 0x50, 0x61, 0x69, 0xb0, 0xd2, 0xac, 0x05, 0x32, 0xec,
	0x17, 0x88, 0xfd, 0xde, 0x26, 0xd0, 0x99, 0x87, 0x99, 0xa2, 0x03, 0xf7, 0xaa, 0xaa, 0x0e, 0x98,
	0x1f, 0xc0, 0xfd, 0x82, 0xca, 0xae, 0x68, 0xb0, 0x5f, 0x98, 0x66, 0x38, 0xd9, 0x47, 0x0d, 0xfb,
	0xac, 0xfb, 0xc3, 0x0d, 0xa6, 0x1f, 0x4d, 0x6e, 0xd9, 0x22, 0x53, 0xbe, 0xfb, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x6e, 0x81, 0x04, 0x28, 0xae, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EVotingClient is the client API for EVoting service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EVotingClient interface {
	PreAuth(ctx context.Context, in *VoterName, opts ...grpc.CallOption) (*Challenge, error)
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthToken, error)
	CreateElection(ctx context.Context, in *Election, opts ...grpc.CallOption) (*Status, error)
	CastVote(ctx context.Context, in *Vote, opts ...grpc.CallOption) (*Status, error)
	GetResult(ctx context.Context, in *ElectionName, opts ...grpc.CallOption) (*ElectionResult, error)
}

type eVotingClient struct {
	cc *grpc.ClientConn
}

func NewEVotingClient(cc *grpc.ClientConn) EVotingClient {
	return &eVotingClient{cc}
}

func (c *eVotingClient) PreAuth(ctx context.Context, in *VoterName, opts ...grpc.CallOption) (*Challenge, error) {
	out := new(Challenge)
	err := c.cc.Invoke(ctx, "/voting.eVoting/PreAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eVotingClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthToken, error) {
	out := new(AuthToken)
	err := c.cc.Invoke(ctx, "/voting.eVoting/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eVotingClient) CreateElection(ctx context.Context, in *Election, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/voting.eVoting/CreateElection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eVotingClient) CastVote(ctx context.Context, in *Vote, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/voting.eVoting/CastVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eVotingClient) GetResult(ctx context.Context, in *ElectionName, opts ...grpc.CallOption) (*ElectionResult, error) {
	out := new(ElectionResult)
	err := c.cc.Invoke(ctx, "/voting.eVoting/GetResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EVotingServer is the server API for EVoting service.
type EVotingServer interface {
	PreAuth(context.Context, *VoterName) (*Challenge, error)
	Auth(context.Context, *AuthRequest) (*AuthToken, error)
	CreateElection(context.Context, *Election) (*Status, error)
	CastVote(context.Context, *Vote) (*Status, error)
	GetResult(context.Context, *ElectionName) (*ElectionResult, error)
}

// UnimplementedEVotingServer can be embedded to have forward compatible implementations.
type UnimplementedEVotingServer struct {
}

func (*UnimplementedEVotingServer) PreAuth(ctx context.Context, req *VoterName) (*Challenge, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreAuth not implemented")
}
func (*UnimplementedEVotingServer) Auth(ctx context.Context, req *AuthRequest) (*AuthToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}
func (*UnimplementedEVotingServer) CreateElection(ctx context.Context, req *Election) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateElection not implemented")
}
func (*UnimplementedEVotingServer) CastVote(ctx context.Context, req *Vote) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CastVote not implemented")
}
func (*UnimplementedEVotingServer) GetResult(ctx context.Context, req *ElectionName) (*ElectionResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResult not implemented")
}

func RegisterEVotingServer(s *grpc.Server, srv EVotingServer) {
	s.RegisterService(&_EVoting_serviceDesc, srv)
}

func _EVoting_PreAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoterName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EVotingServer).PreAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/voting.eVoting/PreAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EVotingServer).PreAuth(ctx, req.(*VoterName))
	}
	return interceptor(ctx, in, info, handler)
}

func _EVoting_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EVotingServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/voting.eVoting/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EVotingServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EVoting_CreateElection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Election)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EVotingServer).CreateElection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/voting.eVoting/CreateElection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EVotingServer).CreateElection(ctx, req.(*Election))
	}
	return interceptor(ctx, in, info, handler)
}

func _EVoting_CastVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Vote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EVotingServer).CastVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/voting.eVoting/CastVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EVotingServer).CastVote(ctx, req.(*Vote))
	}
	return interceptor(ctx, in, info, handler)
}

func _EVoting_GetResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElectionName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EVotingServer).GetResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/voting.eVoting/GetResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EVotingServer).GetResult(ctx, req.(*ElectionName))
	}
	return interceptor(ctx, in, info, handler)
}

var _EVoting_serviceDesc = grpc.ServiceDesc{
	ServiceName: "voting.eVoting",
	HandlerType: (*EVotingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PreAuth",
			Handler:    _EVoting_PreAuth_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _EVoting_Auth_Handler,
		},
		{
			MethodName: "CreateElection",
			Handler:    _EVoting_CreateElection_Handler,
		},
		{
			MethodName: "CastVote",
			Handler:    _EVoting_CastVote_Handler,
		},
		{
			MethodName: "GetResult",
			Handler:    _EVoting_GetResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/voting/voting.proto",
}
